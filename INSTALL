            == MCI: Managed Compiler Infrastructure ==

                -- Installation --

Installation on Linux works through a single Makefile:

    $ make

If you have a working compiler installed, this should just work. Note
that you must have libffi installed, with full support for the closure
API.

There are some variables that you can override:

    * MODEL (= 64)
      - Which pointer size to build for (32 or 64).
    * BUILD (= debug)
      - The build mode (debug, release, or test). The test mode will
        run the unit test suite after the build completes.
    * DPLC (= dmd)
      - The compiler to be used. See the COMPATIBILITY file for a
        list of supported compilers.
    * PREFIX (= /usr/local)
      - Specifies where to install binaries and libraries to when the
        install target is invoked.

For example, to do a 32-bit release build:

    $ make BUILD=release MODEL=32

The resulting libraries and executables are placed into the 'bin'
directory of the source distribution. To install, run:

    $ make install

You may wish to install elsewhere than '/usr/local', in which case,
you can set the PREFIX variable. For example:

    $ make install PREFIX=/opt/mci

You can build the documentation by doing:

    $ make docs

The documentation will be placed in 'docs/_build'. You'll probably
be interested in 'docs/_build/html/index.html' primarily.

Building on Windows is only supported via Visual D. Install your
compiler of choice and configure Visual D to use it.

You'll need the libffi library files. You can either build libffi
from source under Cygwin or MinGW, or you can download precompiled
binaries here: https://github.com/lycus/libffi-d/downloads

You need to make sure that either the Cygwin or MinGW version of the
library can be found via your library search paths. These can be set
in the global Visual D options.

Finally, select your desired solution configuration (Debug, Release,
or Test) and build the solution.

Note that the MCI cannot currently be compiled for 64-bit on Windows
with DMD, due to limitations in Optlink (among other things). It is
not a limitation in the MCI itself.
